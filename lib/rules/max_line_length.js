// Generated by CoffeeScript 1.6.3
(function() {
  var MaxLineLength, regexes;

  regexes = {
    literateComment: /^\#\s/,
    longUrlComment: /^\s*\#\s*http[^\s]+$/
  };

  module.exports = MaxLineLength = (function() {
    function MaxLineLength() {}

    MaxLineLength.prototype.rule = {
      name: 'max_line_length',
      value: 80,
      level: 'error',
      limitComments: true,
      message: 'Line exceeds maximum allowed length',
      description: "This rule imposes a maximum line length on your code. <a\nhref=\"http://www.python.org/dev/peps/pep-0008/\">Python's style\nguide</a> does a good job explaining why you might want to limit the\nlength of your lines, though this is a matter of taste.\n\nLines can be no longer than eighty characters by default."
    };

    MaxLineLength.prototype.lintLine = function(line, lineApi) {
      var limitComments, lineLength, max, _ref, _ref1;
      max = (_ref = lineApi.config[this.rule.name]) != null ? _ref.value : void 0;
      limitComments = (_ref1 = lineApi.config[this.rule.name]) != null ? _ref1.limitComments : void 0;
      lineLength = line.length;
      if (lineApi.isLiterate() && regexes.literateComment.test(line)) {
        lineLength -= 2;
      }
      if (max && max < lineLength && !regexes.longUrlComment.test(line)) {
        if (!limitComments) {
          if (lineApi.getLineTokens().length === 0) {
            return;
          }
        }
        return {
          context: "Length is " + lineLength + ", max is " + max
        };
      }
    };

    return MaxLineLength;

  })();

}).call(this);
