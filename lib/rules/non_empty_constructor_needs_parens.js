// Generated by CoffeeScript 1.6.3
(function() {
  var NonEmptyConstructorNeedsParens, ParentClass, _ref,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  ParentClass = require('./empty_constructor_needs_parens.coffee');

  module.exports = NonEmptyConstructorNeedsParens = (function(_super) {
    __extends(NonEmptyConstructorNeedsParens, _super);

    function NonEmptyConstructorNeedsParens() {
      _ref = NonEmptyConstructorNeedsParens.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    NonEmptyConstructorNeedsParens.prototype.rule = {
      name: 'non_empty_constructor_needs_parens',
      level: 'ignore',
      message: 'Invoking a constructor without parens and with arguments',
      description: "Requires constructors with parameters to include the parens"
    };

    NonEmptyConstructorNeedsParens.prototype.handleExpectedCallStart = function(expectedCallStart) {
      if (expectedCallStart[0] === 'CALL_START' && expectedCallStart.generated) {
        return true;
      }
    };

    return NonEmptyConstructorNeedsParens;

  })(ParentClass);

}).call(this);
