// Generated by CoffeeScript 1.6.3
(function() {
  var NoThrowingStrings;

  module.exports = NoThrowingStrings = (function() {
    function NoThrowingStrings() {}

    NoThrowingStrings.prototype.rule = {
      name: 'no_throwing_strings',
      level: 'error',
      message: 'Throwing strings is forbidden',
      description: "This rule forbids throwing string literals or interpolations. While\nJavaScript (and CoffeeScript by extension) allow any expression to\nbe thrown, it is best to only throw <a\nhref=\"https://developer.mozilla.org\n/en/JavaScript/Reference/Global_Objects/Error\"> Error</a> objects,\nbecause they contain valuable debugging information like the stack\ntrace. Because of JavaScript's dynamic nature, CoffeeLint cannot\nensure you are always throwing instances of <tt>Error</tt>. It will\nonly catch the simple but real case of throwing literal strings.\n<pre>\n<code># CoffeeLint will catch this:\nthrow \"i made a boo boo\"\n\n# ... but not this:\nthrow getSomeString()\n</code>\n</pre>\nThis rule is enabled by default."
    };

    NoThrowingStrings.prototype.tokens = ["THROW"];

    NoThrowingStrings.prototype.lintToken = function(token, tokenApi) {
      var n1, n2, nextIsString, _ref;
      _ref = [tokenApi.peek(), tokenApi.peek(2)], n1 = _ref[0], n2 = _ref[1];
      nextIsString = n1[0] === 'STRING' || (n1[0] === '(' && n2[0] === 'STRING');
      return nextIsString;
    };

    return NoThrowingStrings;

  })();

}).call(this);
